import React from "react";
import {
  Card,
  List,
  Button,
  Empty,
  Tag,
  Space,
  Popconfirm,
  message,
} from "antd";
import {
  BellOutlined,
  DeleteOutlined,
  ClearOutlined,
  CheckCircleOutlined,
} from "@ant-design/icons";
import { useAppSelector, useAppDispatch } from "../hooks/redux";
import { deleteNotification } from "../store/appSlice";
import styles from "./Notifications.module.css";

const Notifications: React.FC = () => {
  const dispatch = useAppDispatch();
  const { notifications } = useAppSelector((state) => state.app);

  const hasNotifications = notifications.length > 0;

  const handleDeleteNotification = (index: number) => {
    dispatch(deleteNotification(index));
    message.success("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ");
  };

  const handleClearAll = () => {
    for (let i = notifications.length - 1; i >= 0; i -= 1) {
      dispatch(deleteNotification(i));
    }
    message.success("–í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã");
  };

  const getNotificationType = (message: string) => {
    if (message.includes("–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç")) return { color: "red", icon: "‚ö†Ô∏è" };
    if (message.includes("–ø–ª–∞—Ç–µ–∂–∞")) return { color: "orange", icon: "üí≥" };
    if (message.includes("–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ")) return { color: "green", icon: "üí∞" };
    if (message.includes("—Ü–µ–ª—å")) return { color: "blue", icon: "üéØ" };
    return { color: "default", icon: "üì¢" };
  };

  return (
    <div className={styles.notifications}>
      <Card
        title={
          <Space>
            <BellOutlined />
            –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            {hasNotifications && (
              <Tag color="blue">{notifications.length}</Tag>
            )}
          </Space>
        }
        extra={
          hasNotifications && (
            <Popconfirm
              title="–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è?"
              description="–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å"
              onConfirm={handleClearAll}
              okText="–î–∞"
              cancelText="–ù–µ—Ç"
            >
              <Button icon={<ClearOutlined />} type="text" danger>
                –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ
              </Button>
            </Popconfirm>
          )
        }
      >
        {!hasNotifications ? (
          <div className={styles.emptyState}>
            <Empty
              image={<CheckCircleOutlined className={styles.emptyIcon} />}
              description={
                <div>
                  <p className={styles.emptyTitle}>–ù–µ—Ç –Ω–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</p>
                  <p className={styles.emptyDescription}>
                    –ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤–∞–∂–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–∞—à–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–∞—Ö
                  </p>
                </div>
              }
            />
          </div>
        ) : (
          <List
            dataSource={notifications}
            renderItem={(notification, index) => {
              const notificationType = getNotificationType(
                notification.message
              );

              return (
                <List.Item
                  className={styles.notificationItem}
                  actions={[
                    <Popconfirm
                      title="–£–¥–∞–ª–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ?"
                      onConfirm={() => handleDeleteNotification(index)}
                      okText="–î–∞"
                      cancelText="–ù–µ—Ç"
                    >
                      <Button
                        type="text"
                        icon={<DeleteOutlined />}
                        size="small"
                        danger
                      />
                    </Popconfirm>,
                  ]}
                >
                  <List.Item.Meta
                    avatar={
                      <div className={styles.notificationAvatar}>
                        <span className={styles.notificationIcon}>
                          {notificationType.icon}
                        </span>
                      </div>
                    }
                    title={
                      <div className={styles.notificationHeader}>
                        <span className={styles.notificationMessage}>
                          {notification.message}
                        </span>
                        <Tag
                          color={notificationType.color}
                          className={styles.notificationTag}
                        >
                          {notification.message.includes("–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç") &&
                            "–õ–∏–º–∏—Ç"}
                          {notification.message.includes("–ø–ª–∞—Ç–µ–∂–∞") && "–ü–ª–∞—Ç—ë–∂"}
                          {notification.message.includes("–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ") &&
                            "–î–æ—Ö–æ–¥"}
                          {notification.message.includes("—Ü–µ–ª—å") && "–¶–µ–ª—å"}
                          {!notification.message.includes("–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç") &&
                            !notification.message.includes("–ø–ª–∞—Ç–µ–∂–∞") &&
                            !notification.message.includes("–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ") &&
                            !notification.message.includes("—Ü–µ–ª—å") &&
                            "–û–±—â–µ–µ"}
                        </Tag>
                      </div>
                    }
                    description={
                      <div className={styles.notificationFooter}>
                        <span className={styles.notificationTime}>
                          –¢–æ–ª—å–∫–æ —á—Ç–æ
                        </span>
                      </div>
                    }
                  />
                </List.Item>
              );
            }}
          />
        )}
      </Card>

      <Card
        title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
        style={{ marginTop: 24 }}
        size="small"
      >
        <div className={styles.settingsGrid}>
          <div className={styles.settingItem}>
            <div className={styles.settingInfo}>
              <div className={styles.settingTitle}>
                üí≥ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø–ª–∞—Ç–µ–∂–∞—Ö
              </div>
              <div className={styles.settingDescription}>
                –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –ø–ª–∞—Ç–µ–∂–∞—Ö –ø–æ –∫—Ä–µ–¥–∏—Ç–∞–º
              </div>
            </div>
            <Tag color="green">–í–∫–ª—é—á–µ–Ω–æ</Tag>
          </div>

          <div className={styles.settingItem}>
            <div className={styles.settingInfo}>
              <div className={styles.settingTitle}>‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤</div>
              <div className={styles.settingDescription}>
                –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤
              </div>
            </div>
            <Tag color="green">–í–∫–ª—é—á–µ–Ω–æ</Tag>
          </div>

          <div className={styles.settingItem}>
            <div className={styles.settingInfo}>
              <div className={styles.settingTitle}>üí∞ –ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –¥–æ—Ö–æ–¥–æ–≤</div>
              <div className={styles.settingDescription}>
                –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Å—á–µ—Ç–∞
              </div>
            </div>
            <Tag color="green">–í–∫–ª—é—á–µ–Ω–æ</Tag>
          </div>

          <div className={styles.settingItem}>
            <div className={styles.settingInfo}>
              <div className={styles.settingTitle}>üéØ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ü–µ–ª–µ–π</div>
              <div className={styles.settingDescription}>
                –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ü–µ–ª–µ–π
              </div>
            </div>
            <Tag color="orange">–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</Tag>
          </div>
        </div>
      </Card>
    </div>
  );
};

export default Notifications;
